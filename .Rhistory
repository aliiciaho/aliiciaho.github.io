library(tidyverse)
data <- read.csv("/Users/aliciaho/Desktop/nus yst/NM2207/NM2207 Project/Mental health Depression disorder Data.csv")
glimpse(data)
library(tidyverse)
data <- read.csv("/Users/aliciaho/Desktop/nus yst/NM2207/NM2207 Project/Mental health Depression disorder Data.csv")
glimpse(data)
print(data)
library(tidyverse)
data <- read.csv("/Users/aliciaho/Desktop/nus yst/NM2207/NM2207 Project/Mental health Depression disorder Data.csv")
glimpse(data)
print(data)
library(tidyverse)
data <- read.csv("/Users/aliciaho/Desktop/nus yst/NM2207/NM2207 Project/Mental health Depression disorder Data.csv")
print(data)
data$Schizophrenia.... <- as.numeric(data$Schizophrenia....)
data$Bipolar.disorder....<- as.numeric(data$Bipolar.disorder....)
data$Eating.disorders.... <- as.numeric(data$Eating.disorders....)
newsgp_data <- data %>% select(-c(index, Entity)) %>%
filter(Code == "SGP", Year >=1990, Eating.disorders.... <100) %>%
pivot_longer(cols = Schizophrenia....:Alcohol.use.disorders...., names_to = "disorder_type", values_to = "percentage") %>%
select(Year, disorder_type, percentage) %>%
na.omit()
print(ggplot(newsgp_data) +
aes(x = Year, y = percentage) +
geom_point() +
facet_wrap(~ disorder_type, ncol =2))
library(shiny)
install.packages("rsconnect")
rsconnect::setAccountInfo(name='1ua3vn-alicia-ho', token='A4918D759671B2DF3C4D2871ACA798E9', secret='ptCNIg7i4FfDjn4Nx00aIVw2WU3Ooty7Cvnl9uTy')
library(shiny)
runApp('personal_app')
#Creating map
library(geojsonio)
library(leaflet)
library(magrittr)
countries <- geojsonio::geojson_read("https://raw.githubusercontent.com/lvictory/maps-data/master/world.geo.json",
what = "sp")
class(countries)
names(countries)
m <- leaflet(countries) %>%
setView(-96, 37.8, 4) %>%
addTiles("MapBox", options = tileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
labels <- sprintf(
"<strong>%s</strong><br/>%s",
countries$name, countries$id
) %>% lapply(htmltools::HTML)
m %>% addPolygons(
fillColor = 'green',
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlightOptions = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")
)
